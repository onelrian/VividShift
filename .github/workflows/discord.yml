name: Send Results to Discord

on:
  workflow_run:
    workflows: ["Run Docker Container"]
    types:
      - completed

jobs:
  send-to-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install jq
        run: sudo apt update && sudo apt install -y jq

      - name: Download output artifact
        uses: actions/download-artifact@v4
        with:
          name: output
          path: output

      - name: Check if output file exists
        run: |
          if [ ! -f output/output.txt ]; then
            echo "Error: output.txt not found! Skipping Discord notification."
            exit 0  # Do not fail workflow if the file is missing
          fi

      - name: Debug output file content
        run: |
          cat output/output.txt

      - name: Read and format output
        run: |
          FORMATTED_OUTPUT="**📊 Work Distribution Results**\n\n"

          # Read and format JSON output from file
          cat output/output.txt | jq -r 'to_entries | .[] | "\(.key): \(.value | join(", "))"' | while IFS= read -r line; do
            key=$(echo "$line" | cut -d: -f1)
            value=$(echo "$line" | cut -d: -f2-)

            # Assign icons based on the key
            case "$key" in
              "Tanks") icon="🛢️";;
              "Bin") icon="🗑️";;
              "Front") icon="🚪";;
              "Toilet A") icon="🚻";;
              "Toilet B") icon="🚻";;
              "Backyard") icon="🏡";;
              "Parlor") icon="🛋️";;
              *) icon="🔹";;
            esac

            FORMATTED_OUTPUT+="$icon **$key**: $value\n"
          done

          # Save to JSON for curl
          echo "{\"content\": \"$FORMATTED_OUTPUT\"}" > discord_payload.json

      - name: Send to Discord using curl
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d @discord_payload.json \
            ${{ secrets.DISCORD_WEBHOOK }}
