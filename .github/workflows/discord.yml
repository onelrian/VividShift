name: Send Results to Discord

on:
  workflow_run:
    workflows: ["Run Docker Container"]
    types:
      - completed

jobs:
  send-to-discord:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download output artifact
        uses: actions/download-artifact@v4
        with:
          name: output
          path: output

      - name: Check if output file exists
        run: |
          if [ ! -f output/output.txt ]; then
            echo "❌ Error: output.txt not found! Skipping Discord notification."
            exit 0
          fi

      - name: Read and format output
        run: |
          FORMATTED_OUTPUT="📊 **Work Distribution Results**\n\n"
          while IFS= read -r line; do
            key=$(echo "$line" | awk -F': ' '{print $1}')
            value=$(echo "$line" | awk -F': ' '{print $2}' | tr -d '[]"')

            case "$key" in
              "Tanks") icon="🛢️"; sub_icon="💧";;
              "Bin") icon="🗑️"; sub_icon="🚮";;
              "Front") icon="🚪"; sub_icon="🛠️";;
              "Toilet A") icon="🚻"; sub_icon="🧽";;
              "Toilet B") icon="🚻"; sub_icon="🧼";;
              "Backyard") icon="🏡"; sub_icon="🌿";;
              "Parlor") icon="🛋️"; sub_icon="🧹";;
              *) icon="🔹"; sub_icon="";;
            esac

            FORMATTED_OUTPUT+="$icon **$key**\n$sub_icon Assigned: $value\n\n"
          done < output/output.txt

          echo "$FORMATTED_OUTPUT" | jq -Rs '{content: .}' > discord_payload.json

      - name: Debug Discord Payload
        run: cat discord_payload.json

      - name: Send to Discord
        run: |
          curl -X POST -H "Content-Type: application/json" \
            --fail --silent --show-error \
            -d @discord_payload.json \
            ${{ secrets.DISCORD_WEBHOOK }}
