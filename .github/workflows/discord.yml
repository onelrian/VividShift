name: Send Results to Discord

on:
  workflow_run:
    workflows: ["Build and Deploy Docker Container"]
    types:
      - completed

jobs:
  send-to-discord:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Install GitHub CLI & jq
      - name: Install GitHub CLI & jq
        run: |
          sudo apt update
          sudo apt install -y gh jq

      # Step 3: Authenticate GitHub CLI
      - name: Authenticate GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh auth setup-git

      # Step 4: Download output artifact using GitHub CLI
      - name: Download output artifact using GitHub CLI
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run download --name work-distribution-output --dir output

      # Step 5: Check if output.txt exists
      - name: Check if output file exists
        run: |
          if [ ! -f output/output.txt ]; then
            echo "Error: output.txt not found! Skipping Discord notification."
            exit 0
          fi

      # Step 6: Read and format output for Discord
      - name: Read and format output for Discord
        run: |
          FORMATTED_OUTPUT="**📊 Work Distribution Results**\n\n"
          while IFS= read -r line; do
            key=$(echo "$line" | awk -F': ' '{print $1}')
            value=$(echo "$line" | awk -F': ' '{print $2}' | tr -d '[]"')
            
            case "$key" in
              "Tanks") icon="🛢️"; sub_icon="💧";;
              "Bin") icon="🗑️"; sub_icon="🚮";;
              "Front") icon="🚪"; sub_icon="🛠️";;
              "Toilet A") icon="🚻"; sub_icon="🧽";;
              "Toilet B") icon="🚻"; sub_icon="🧼";;
              "Backyard") icon="🏡"; sub_icon="🌿";;
              "Parlor") icon="🛋️"; sub_icon="🧹";;
              *) icon="🔹"; sub_icon="";;
            esac
            FORMATTED_OUTPUT+="$icon **$key**\n$sub_icon Assigned: $value\n\n"
          done < output/output.txt
          echo "{\"content\": \"$FORMATTED_OUTPUT\"}" > discord_payload.json

      # Step 7: Debug the Discord payload (Optional step for checking the content before sending)
      - name: Debug Discord Payload
        run: |
          cat discord_payload.json

      # Step 8: Send the results to Discord
      - name: Send to Discord using curl
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d @discord_payload.json \
            ${{ secrets.DISCORD_WEBHOOK }}
