name: Distribute Work and Notify Discord

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 10 */14 * *'

jobs:
  build-run-and-notify:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Run Work Distributor
        id: work_distributor
        run: |
          output=$(cargo run)
          # Use the standard method for passing multi-line strings
          echo "DISTRIBUTION_OUTPUT<<EOF" >> $GITHUB_OUTPUT
          echo "${output}" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Send notification to Discord
        # --- FINAL FIX: Using the simpler 'message' parameter to ensure content is always sent ---
        uses: appleboy/discord-action@master
        with:
          webhook_id: ${{ secrets.DISCORD_WEBHOOK_ID }}
          webhook_token: ${{ secrets.DISCORD_WEBHOOK_TOKEN }}
          message: |
            Hello everyone! Here is the new work distribution for the next two weeks.
            ${{ steps.work_distributor.outputs.DISTRIBUTION_OUTPUT }}

      - name: Commit updated assignment history
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions@github.com'
          git add assignment_history.txt
          if ! git diff --staged --quiet; then
            git commit -m "chore: Update assignment history for new cycle"
            git push
          else
            echo "No changes to assignment_history.txt to commit."
          fi