name: Run Docker Container

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: '0 0 */14 * *'  # Runs every two weeks at midnight UTC

jobs:
  build-and-run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Rust dependencies
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image to GHCR
        run: |
          docker build -t ghcr.io/${{ github.repository }}/my-image:latest .
          docker push ghcr.io/${{ github.repository }}/my-image:latest

      - name: Run Docker container
        run: |
          docker run --rm ghcr.io/${{ github.repository }}/my-image:latest > output.txt

      - name: Set output as environment variable
        run: |
          OUTPUT=$(cat output.txt)  # Read the content of the output.txt file
          echo "WORK_DATA=$OUTPUT" >> $GITHUB_ENV  # Pass it as an environment variable

      - name: Send output to Discord directly (optional)
        run: |
          curl -X POST -H "Content-Type: application/json" \
            -d "{\"content\": \"Work distribution results: $OUTPUT\"}" \
            ${{ secrets.DISCORD_WEBHOOK }}
