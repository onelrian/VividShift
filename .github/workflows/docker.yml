name: Work Group Distribution

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  distribute-work:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Authenticate to GitHub Container Registry
      - name: Set up Docker authentication for GitHub Container Registry
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io

      - name: Build and Run Docker Container
        id: run_container
        run: |
          docker run --rm ghcr.io/onelrian/work-distributor/work-group-generator:latest > output.txt
          cat output.txt  # Debugging step
          base64 -w 0 output.txt > output_encoded.txt  # Encode as single line

      - name: Store Base64 Output in File
        run: |
          echo "WORK_OUTPUT_FILE=$(pwd)/output_encoded.txt" >> $GITHUB_ENV

      - name: Decode and Format Output
        run: |
          if [ -z "${{ env.WORK_OUTPUT_FILE }}" ]; then
            echo "❌ No output found! Skipping Discord notification."
            exit 1
          fi

          cat "${{ env.WORK_OUTPUT_FILE }}" | base64 -d > formatted_output.txt
          echo "🔍 Checking formatted_output.txt:"
          cat formatted_output.txt || echo "⚠️ No content in formatted_output.txt"

      - name: Generate Discord Message
        run: |
          FORMATTED_OUTPUT="📊 **Work Distribution Results**\n\n"

          while IFS= read -r line; do
            key=$(echo "$line" | awk -F': ' '{print $1}')
            value=$(echo "$line" | awk -F': ' '{print $2}' | tr -d '[]"')

            case "$key" in
              "Tank") icon="🛢️"; sub_icon="💧";;
              "Bin") icon="🗑️"; sub_icon="🚮";;
              "Frontyard") icon="🚪"; sub_icon="🛠️";;
              "Toilet A") icon="🚻"; sub_icon="🧽";;
              "Toilet B") icon="🚻"; sub_icon="🧼";;
              "Backyard") icon="🏡"; sub_icon="🌿";;
              "Parlor") icon="🛋️"; sub_icon="🧹";;
              *) icon="🔹"; sub_icon="";;
            esac

            FORMATTED_OUTPUT+="$icon **$key**\n$sub_icon Assigned: $value\n\n"
          done < formatted_output.txt

          echo "{\"content\": \"$FORMATTED_OUTPUT\"}" > discord_payload.json

      - name: Send to Discord
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          if [ ! -s discord_payload.json ]; then
            echo "❌ No data to send! Exiting."
            exit 1
          fi
          
          curl -X POST -H "Content-Type: application/json" -d @discord_payload.json "$DISCORD_WEBHOOK"
